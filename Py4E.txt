# PY4E
assignments


assignment 3.1

hrs = input("Enter Hours:")
h = float(hrs)
rate = input('Enter Rate:')
rate = float(rate)
if h > 40:
    pay = (h-40)*1.5*rate+40*rate
else:
    pay = h*rate
print(pay)





assignment 3.3

score = input("Enter Score: ")
score = float(score)
if 0 <= score < 0.6:
    print('F')
elif 1 >= score >= 0.9:
    print('A')
elif score >= 0.8:
    print('B')
elif score >= 0.7:
    print('C')
elif score >= 0.6:
    print('D')
else:
    print('error')





assignment 4.6

def computepay(h,r):
    if h <= 40:
        return h*r
    else:
        return (h-40)*1.5*r+40*r

hrs = input("Enter Hours:")
h = float(hrs)
rate = input('Enter Rate:')
r = float(rate)
p = computepay(h,r)
print("Pay", p)





assignment 5.2

largest = None
smallest = None
while True:
    num = input("Enter a number: ")
    if num == "done":
        break
    else:
        try:
            num = int(num)
            if largest is None or largest < num:
                largest = num
            elif smallest is None or smallest > num:
                smallest = num
        except:
            print('Invalid input')
            continue

print("Maximum is", largest)
print('Minimum is', smallest)




assignment 6.5

text = "X-DSPAM-Confidence:    0.8475"
pos = text.find(' ')
letter = text[pos:]
num = letter.strip()
num = float(num)
print(num)




assignment 7.1

# Use words.txt as the file name
fname = input("Enter file name: ")
fh = open(fname)
for line in fh:
    line = line.rstrip()
    line = line.upper()
    print(line)





assignment 7.2

# Use the file name mbox-short.txt as the file name
fname = input("Enter file name: ")
fh = open(fname)
count = 0
su = 0
for line in fh:
    if not line.startswith("X-DSPAM-Confidence:"):
        continue
    else:
        count = count+1
        beg = line.find(':')
        letter = line[beg+1:]
        num = letter.strip()
        num = float(num)
        su = su+num
ave = su/count
print("Average spam confidence:",ave)





assignment 8.4

fname = input("Enter file name: ")
fh = open(fname)
lst = list()
for line in fh:
    line = line.rstrip()
    words = line.split()
    for i in words:
        if i not in lst:
            lst.append(i)
        else:
            continue
lst.sort()
print(lst)






assignment 8.5

fname = input("Enter file name: ")
if len(fname) < 1:
    fname = "mbox-short.txt"
count = 0
fh = open(fname)
for line in fh:
    line = line.rstrip()
#    if line.startswith('From '):
#        words = line.split()
    words = line.split()
    if 'From' not in words:
        continue
    else:
        if len(words) >=6:
            print(words[1])
            count =count+1
print("There were", count, "lines in the file with From as the first word")






assignment 9.4

filename = input("Enter file:")
if len(filename) < 1:
    filename = "mbox-short.txt"
handle = open(filename)
counts = dict()

for line in handle:
    line = line.rstrip()
    if line.startswith('From '):
        words = line.split()
        name = words[1]    
        counts[name] = counts.get(name,0)+1
    else:
        continue

oftenname = None
maxtimes = None
for name,times in counts.items():
    if maxtimes is None or times > maxtimes:
        maxtimes = times
        oftenname = name

print(oftenname,maxtimes)







assignment 10.2

name = input("Enter file:")
if len(name) < 1:
    name = "mbox-short.txt"
handle = open(name)
counts = dict()

for line in handle:
    line = line.rstrip()    
    if line.startswith('From '):
        words = line.split()

        for word in words:
            if ':' in word:
                times = word.split(':')
                hour = times[0]
                counts[hour] = counts.get(hour,0)+1  
           # if word.startswith(':'):

#lst = list()
#lst = counts.items()
#lst = sorted(lst)
#for hour,times in lst:
#    print(hour,times)

counts = sorted(counts.items())
for hour, times in counts:
    print(hour,times)








extracting data with regular expressions

import re

handle = open('actual.txt')
whole = handle.read()
numbers = re.findall('[0-9]+',whole)

sumup = 0
for i in numbers:
    sumup = sumup+int(i)
print(sumup)






understanding the request/response cycle

F12------Network------Ctrl+R-------intro-short.txt